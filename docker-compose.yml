version: '3'

networks:
  public: {}
  private: {}

volumes:
  grafana_lib: {}
  grafana_ds: 

services:
  influxdb:
    container_name: influxdb
    image: influxdb:1.8
    env_file: configuration.env
    networks:
      - public
      - private
    ports:
      - '8086:8086'
    volumes:
      - ./:/imports
      - ./data/influxdb:/var/lib/influxdb

  grafana:
      image: grafana/grafana:latest
      container_name: grafana
      ports:
        - "3000:3000"
      networks:
        - public
        - private
      volumes:
        - ./grafana:/etc/grafana/provisioning/
      environment:
        GF_AUTH_ANONYMOUS_ENABLED: true
        GF_SECURITY_ADMIN_PASSWORD: "Andrew001"
        GF_SECURITY_ADMIN_USER: "admin"
        GF_SERVER_PROTOCOL: "http"
        GF_SERVER_METRICS_ENABLED: "true"
        GF_SERVER_METRICS_INTERVAL_SECONDS: "10"
        GF_AUTH_BASIC_ENABLED: false
        INFLUXDB_URI: "http://influxdb:8086"
        INFLUXDB_DB: influx
        
  telegraf:
    image: telegraf:latest
    container_name: telegraf
    networks:
      - public
      - private
    depends_on:
      - influxdb
    volumes:
      - ./telegraf/etc/telegraf.conf:/etc/telegraf/telegraf.conf:ro
    environment:
      INFLUXDB_URI: "http://influxdb:8086"

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
     - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
     - private
    command: "--config.file=/etc/prometheus/prometheus.yml --storage.tsdb.path=/prometheus"
    ports:
     - 9091:9090
    depends_on:
     - node_exporter

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    volumes:
      - ${PWD}/node_exporter/justrun.py:/justrun.py:rw
      - ${PWD}/node_exporter/hmon:/hmon:rw
      - ${PWD}/node_exporter/smoothlogging:/smoothlogging:rw
      - ${PWD}/node_exporter/textfile_collector:/var/lib/node_exporter/textfile_collector/
    networks:
      - public
      - private
    environment:
      DOGSNAME:      "GULA,BODKA"
    expose:
      - 9100
    ports:
      - 9101:9100

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: unless-stopped
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev/disk/:/dev/disk:ro
    expose:
      - 8080
    networks:
      - private
      - public
    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
      - private
    restart: unless-stopped
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
